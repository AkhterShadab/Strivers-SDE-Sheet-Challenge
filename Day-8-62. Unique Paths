class Solution {
    
    public int uniquePaths(int m, int n) {
        int[][] temp=new int[m][n];
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i==0 && j==0) temp[i][j]=1;
                else
                {
                    int right=0;int down=0;
                    if(i>0)right=temp[i-1][j];
                    if(j>0)down=temp[i][j-1];
                    temp[i][j]=right+down;
                }
            }
        }
        return temp[m-1][n-1];
    }
}

<-------------------------------------------------------------------------------------------------------------------->

class Solution {
    
    public int uniquePaths(int m, int n) {
        int[] prev=new int[n];
        for(int i=0;i<m;i++)
        {
            int[] temp=new int[n];
            for(int j=0;j<n;j++)
            {
                if(i==0 && j==0) temp[j]=1;
                else
                {
                    int right=0;int down=0;
                    if(i>0)right=prev[j];
                    if(j>0)down=temp[j-1];
                    temp[j]=right+down;
                }
            }
            prev=temp;
        }
        return prev[n-1];
    }
}
