class Solution {
    public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals,(a,b)->a[0]-b[0]);
        ArrayList<int[]> res=new ArrayList<>();
        int n=intervals.length;
        for(int i=0;i<n;i++)
        {
            if(res.size()==0 || intervals[i][0]>res.get(res.size()-1)[1])
            {
              res.add(intervals[i]);  
            }
            else
            {
                res.get(res.size()-1)[1]=Math.max(res.get(res.size()-1)[1],intervals[i][1]);
            }
        }
        
        
        // for(int i=0;i<n;i++)
        // {
        //     int start=intervals[i][0];
        //     int end=intervals[i][1];
        //     if(res.size()>0 && end<=res.get(res.size()-1)[1])
        //     {
        //         continue;
        //     }
        //     int j=0;
        //     for(j=i+1;j<n;j++)
        //     {
        //         if(intervals[j][0]<=end)
        //         {
        //             end=Math.max(end,intervals[j][1]);
        //         }
        //         else
        //         {
        //             break;
        //         }
        //     i=j;
        //     }
        //     res.add(new int[]{start,end});
            
        // }
        // for(int i=0;i<res.size();i++)
        // {
        //     // System.out.println(Arrays.toString(res.get(i)));
        // }
        int [][] output=new int[res.size()][2];
        for(int i=0;i<res.size();i++)
        {
            output[i]=res.get(i);
        }
        return output;
    }
}
