class Solution {
    public boolean isPalindrome(String s, int start, int end)
    {
        while(start<=end)
        {
            if(s.charAt(start++)!=s.charAt(end--))
            {
                return false;
            }
        }
        return true;
    }
    public void combination(List<List<String>> res, List<String> temp,String s, int index)
    {
        if(index==s.length())
        {
            res.add(new ArrayList<>(temp));
            return;
        }
        for(int i=index;i<s.length();i++)
        {
            if(isPalindrome(s,index,i)){
                temp.add(s.substring(index,i+1));
                combination(res,temp,s,i+1);
                temp.remove(temp.size()-1);
            }
            
        }
    }
    public List<List<String>> partition(String s) {
        List<List<String>> res=new ArrayList<>();
        List<String> temp=new ArrayList<>();
        
        combination(res,temp,s,0);
        return res;
        
    }
}
