### Dutch - National Flag Algorithm ----->>>>

class Solution {
    public void swap(int i, int j, int [] nums)
    {
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    public void sortColors(int[] nums) {
        int low=0;
        int mid=0;
        int high=nums.length-1;
        while(mid<=high)
        {
            if(nums[mid]==0)
            {
                swap(low,mid,nums);
                low++;
                mid++;
            }
            else if(nums[mid]==1)
            {
                mid++;
            }
            else
            {
                swap(mid,high,nums);
                high--;
            }
        }
    }
}

<----------------------------------------------------------------------------------------------------->



class Solution {
    public void swap(int i, int j, int [] nums)
    {
        int temp=nums[i];
        nums[i]=nums[j];
        nums[j]=temp;
    }
    public void sortColors(int[] nums) {
        int l=0;
        int r=nums.length-1;
        while(l<r)
        {
            if(nums[l]==2)
            {
                swap(l,r,nums);
                r--;
            }
            else if(nums[l]==0)l++;
            else
            {
                int pos=-1;
                int k=l+1;
                while(k<nums.length)
                {
                    if(nums[k]==0)
                    {
                        pos=k;
                        break;
                    }
                    k++;
                }
                if(pos!=-1)
                {
                    swap(l,k,nums);
                }
                l++;
            }
        }
        // int[] auxArray=new int[nums.length];
        // Arrays.fill(auxArray,1);
        // int left=0;
        // int right=nums.length-1;
        // for(int i=0;i<nums.length;i++)
        // {
        //     if(nums[i]==0){
        //         auxArray[left]=0;
        //         left++;
        //     }
        //     else if(nums[i]==2)
        //     {
        //         auxArray[right]=2;
        //         right--;
        //     }
        // }
        // System.out.println(Arrays.toString(auxArray));
        // int i=0;
        // while(i<nums.length)
        // {
        //     nums[i]=auxArray[i];
        //     i++;
        // }
    }
}


<----------------------------------------------------------------------------------------------------->



class Solution {
    public void sortColors(int[] nums) {
        int[] auxArray=new int[nums.length];
        Arrays.fill(auxArray,1);
        int left=0;
        int right=nums.length-1;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]==0){
                auxArray[left]=0;
                left++;
            }
            else if(nums[i]==2)
            {
                auxArray[right]=2;
                right--;
            }
        }
        System.out.println(Arrays.toString(auxArray));
        int i=0;
        while(i<nums.length)
        {
            nums[i]=auxArray[i];
            i++;
        }
    }
}
