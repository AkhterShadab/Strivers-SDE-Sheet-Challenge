class Solution {
    public void countSum(List<List<Integer>> res, List<Integer> temp,int[] candidates, int target, int sum , int index )
    {
        if(sum==target)
        {
            res.add(new ArrayList<>(temp));
            return;
        }
        if(index>=candidates.length || sum>target)
        {
            return;
        }
        
        if(sum+candidates[index]<=target)
        {
            temp.add(candidates[index]);
            countSum(res,temp,candidates,target,sum+candidates[index],index);
            temp.remove(temp.size()-1);
        }
        countSum(res,temp,candidates,target,sum,index+1);

    }
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<>();
        List<Integer> temp=new ArrayList<>();

        countSum(res,temp,candidates,target,0,0);
        return res;
    }
}
