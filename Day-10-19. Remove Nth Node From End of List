class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode dummy=new ListNode();
        dummy.next=head;
        ListNode fast=dummy;
        ListNode slow=dummy;
        for(int i=0;i<n;i++)
        {
            fast=fast.next;
        }
        while(fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next;
        }
        slow.next=slow.next.next;
        if(slow==dummy) return head.next;
        return head;
    }
}

<--------------------------------------------------------->
RECURSION --

class Solution {
    public int remove(ListNode temp, int n, int i)
    {
        if(temp.next==null){return i+=1;}
        int val=remove(temp.next,n,i);
        if(val==n)
        {
            temp.next=temp.next.next;
        }
        return val+=1;
    }
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next==null)return null;
        ListNode temp=head;
        int val=remove(temp,n,0);
        if(val==n)return head.next;
        return head;
    }
}
