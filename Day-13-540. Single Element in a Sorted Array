class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n=nums.length;
        int low=0;
        int high=n-1;
        if(n==1)return nums[0];
        while(low<=high)
        {
            // && (mid<n-1 && nums[mid]!=nums[mid+1])
            int mid=low+(high-low)/2;
            System.out.println(mid+"--"+nums[mid]);
            if(mid==0 && nums[mid]!=nums[mid+1]) return nums[mid];
            if(mid==n-1 && nums[mid]!=nums[mid-1]) return nums[mid];
            if(nums[mid]!=nums[mid+1] && nums[mid]!=nums[mid-1]) return nums[mid];
            
            if(mid>0 && nums[mid]==nums[mid-1])
            {
                if((high-mid)%2!=0)
                {
                    low=mid+1;
                }
                else
                {
                    high=mid;
                }
            }
            else 
            {
                if((high-mid-1)%2!=0)
                {
                    low=mid+2;
                }
                else
                {
                    high=mid-1;
                }
            }
        }
        return -1;
    }
}
